%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%    Ben Engelhard, Princeton University (2019).
%
%    This program is provided free without any warranty; you can redistribute it and/or modify it under the terms of the GNU General Public License version 3 as published by the Free Software Foundation.
%    If this code is used, please cite: B Engelhard et al. Specialized coding of sensory, motor, and cognitive variables in VTA dopamine neurons. Nature, 2019.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% get_neural_traces.m
%%%
%%% Description: Extract traces from motion corrected movies generated by the DBMC program given a set of ROIs
%
% arguments: output_folder - Folder where the corrected movies and the ROIs are saved. Neuronal ROIs should be made in imagej ROI manager and named as follows:
%                            if a single ROI is saved for a given patch, it should be named 'mc_image_stack_full_patch_N_ROI.roi' , where N is the patch number 
%                            (e.g. mc_image_stack_full_patch_3_ROI.roi). If multiple ROIs are saved for a given patch, they should be saved in a zip file and named
%                            'mc_image_stack_full_patch_N_ROIs.zip' , where N is the patch number (e.g. mc_image_stack_full_patch_3_ROIs.zip).

function get_neural_traces(output_folder)

slashind = '\';
if isunix
    slashind = '/';
end
if ~strcmp(output_folder(end),slashind)
    output_folder = [output_folder,slashind];
end

num_patches = length(dir([output_folder,'res_mc_data_*']));
parfor patch_ctr = 1:num_patches 
    patch_files_cell = {};

    cur_name = ['mc_image_stack_full_patch_',num2str(patch_ctr)];
    single_patch_file = [output_folder,cur_name,'_ROI.roi'];
    mult_patch_files =  [output_folder,cur_name,'_ROIs.zip'];
    
    if ~isempty(dir(single_patch_file))
        patch_files_cell{1} = single_patch_file;
        
    elseif ~isempty(dir(mult_patch_files))
        cur_patches_folder = [output_folder,cur_name,'_patches_folder',slashind];
        if ~exist(cur_patches_folder,'dir')
            mkdir(cur_patches_folder)
        end
        unzip(mult_patch_files,cur_patches_folder)
        cur_patch_files = dir([cur_patches_folder,'*.roi']);
        for tmp_ctr = 1:length(cur_patch_files)
            patch_files_cell{tmp_ctr} = [cur_patches_folder,cur_patch_files(tmp_ctr).name];
        end            
    else
       disp(['NO patches Found for file: ', cur_name])
       continue
    end
    
    trace_str = 'trace';
    if length(patch_files_cell)>1
        trace_str = 'traces';
    end
    
    disp(['Now extracting ',num2str(length(patch_files_cell)),' ',trace_str,' for file(s): ', cur_name])
    make_traces(output_folder,cur_name,patch_files_cell)
    
end






